node {
  name: "input"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 28
        }
        dim {
          size: 28
        }
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "output"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 10
        }
      }
    }
  }
}
node {
  name: "random_normal/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\001\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "random_normal/mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "random_normal/stddev"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.00999999977648
      }
    }
  }
}
node {
  name: "random_normal/RandomStandardNormal"
  op: "RandomStandardNormal"
  input: "random_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 777
    }
  }
  attr {
    key: "seed2"
    value {
      i: 5
    }
  }
}
node {
  name: "random_normal/mul"
  op: "Mul"
  input: "random_normal/RandomStandardNormal"
  input: "random_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "random_normal"
  op: "Add"
  input: "random_normal/mul"
  input: "random_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Variable"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Variable/Assign"
  op: "Assign"
  input: "Variable"
  input: "random_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Variable/read"
  op: "Identity"
  input: "Variable"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable"
      }
    }
  }
}
node {
  name: "random_normal_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "random_normal_1/mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "random_normal_1/stddev"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.00999999977648
      }
    }
  }
}
node {
  name: "random_normal_1/RandomStandardNormal"
  op: "RandomStandardNormal"
  input: "random_normal_1/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 777
    }
  }
  attr {
    key: "seed2"
    value {
      i: 14
    }
  }
}
node {
  name: "random_normal_1/mul"
  op: "Mul"
  input: "random_normal_1/RandomStandardNormal"
  input: "random_normal_1/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "random_normal_1"
  op: "Add"
  input: "random_normal_1/mul"
  input: "random_normal_1/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Variable_1"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Variable_1/Assign"
  op: "Assign"
  input: "Variable_1"
  input: "random_normal_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_1"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Variable_1/read"
  op: "Identity"
  input: "Variable_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_1"
      }
    }
  }
}
node {
  name: "random_normal_2/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "random_normal_2/mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "random_normal_2/stddev"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.00999999977648
      }
    }
  }
}
node {
  name: "random_normal_2/RandomStandardNormal"
  op: "RandomStandardNormal"
  input: "random_normal_2/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 777
    }
  }
  attr {
    key: "seed2"
    value {
      i: 23
    }
  }
}
node {
  name: "random_normal_2/mul"
  op: "Mul"
  input: "random_normal_2/RandomStandardNormal"
  input: "random_normal_2/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "random_normal_2"
  op: "Add"
  input: "random_normal_2/mul"
  input: "random_normal_2/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Variable_2"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Variable_2/Assign"
  op: "Assign"
  input: "Variable_2"
  input: "random_normal_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_2"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Variable_2/read"
  op: "Identity"
  input: "Variable_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_2"
      }
    }
  }
}
node {
  name: "random_normal_3/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\010\000\000q\002\000\000"
      }
    }
  }
}
node {
  name: "random_normal_3/mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "random_normal_3/stddev"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.00999999977648
      }
    }
  }
}
node {
  name: "random_normal_3/RandomStandardNormal"
  op: "RandomStandardNormal"
  input: "random_normal_3/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 777
    }
  }
  attr {
    key: "seed2"
    value {
      i: 32
    }
  }
}
node {
  name: "random_normal_3/mul"
  op: "Mul"
  input: "random_normal_3/RandomStandardNormal"
  input: "random_normal_3/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "random_normal_3"
  op: "Add"
  input: "random_normal_3/mul"
  input: "random_normal_3/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Variable_3"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2048
        }
        dim {
          size: 625
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Variable_3/Assign"
  op: "Assign"
  input: "Variable_3"
  input: "random_normal_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_3"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Variable_3/read"
  op: "Identity"
  input: "Variable_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_3"
      }
    }
  }
}
node {
  name: "random_normal_4/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "q\002\000\000\n\000\000\000"
      }
    }
  }
}
node {
  name: "random_normal_4/mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "random_normal_4/stddev"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.00999999977648
      }
    }
  }
}
node {
  name: "random_normal_4/RandomStandardNormal"
  op: "RandomStandardNormal"
  input: "random_normal_4/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 777
    }
  }
  attr {
    key: "seed2"
    value {
      i: 41
    }
  }
}
node {
  name: "random_normal_4/mul"
  op: "Mul"
  input: "random_normal_4/RandomStandardNormal"
  input: "random_normal_4/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "random_normal_4"
  op: "Add"
  input: "random_normal_4/mul"
  input: "random_normal_4/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Variable_4"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 625
        }
        dim {
          size: 10
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Variable_4/Assign"
  op: "Assign"
  input: "Variable_4"
  input: "random_normal_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_4"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Variable_4/read"
  op: "Identity"
  input: "Variable_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_4"
      }
    }
  }
}
node {
  name: "keep_conv"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
}
node {
  name: "keep_hidden"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
}
node {
  name: "model/input_layer/Conv2D"
  op: "Conv2D"
  input: "input"
  input: "Variable/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "model/input_layer/Relu"
  op: "Relu"
  input: "model/input_layer/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/input_layer/MaxPool"
  op: "MaxPool"
  input: "model/input_layer/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "model/input_layer/dropout/Shape"
  op: "Shape"
  input: "model/input_layer/MaxPool"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/input_layer/dropout/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/input_layer/dropout/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/input_layer/dropout/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "model/input_layer/dropout/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 777
    }
  }
  attr {
    key: "seed2"
    value {
      i: 55
    }
  }
}
node {
  name: "model/input_layer/dropout/random_uniform/sub"
  op: "Sub"
  input: "model/input_layer/dropout/random_uniform/max"
  input: "model/input_layer/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/input_layer/dropout/random_uniform/mul"
  op: "Mul"
  input: "model/input_layer/dropout/random_uniform/RandomUniform"
  input: "model/input_layer/dropout/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/input_layer/dropout/random_uniform"
  op: "Add"
  input: "model/input_layer/dropout/random_uniform/mul"
  input: "model/input_layer/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/input_layer/dropout/add"
  op: "Add"
  input: "keep_conv"
  input: "model/input_layer/dropout/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/input_layer/dropout/Floor"
  op: "Floor"
  input: "model/input_layer/dropout/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/input_layer/dropout/div"
  op: "RealDiv"
  input: "model/input_layer/MaxPool"
  input: "keep_conv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/input_layer/dropout/mul"
  op: "Mul"
  input: "model/input_layer/dropout/div"
  input: "model/input_layer/dropout/Floor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/hidden_layer1/Conv2D"
  op: "Conv2D"
  input: "model/input_layer/dropout/mul"
  input: "Variable_1/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "model/hidden_layer1/Relu"
  op: "Relu"
  input: "model/hidden_layer1/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/hidden_layer1/MaxPool"
  op: "MaxPool"
  input: "model/hidden_layer1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "model/hidden_layer1/dropout/Shape"
  op: "Shape"
  input: "model/hidden_layer1/MaxPool"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/hidden_layer1/dropout/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/hidden_layer1/dropout/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/hidden_layer1/dropout/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "model/hidden_layer1/dropout/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 777
    }
  }
  attr {
    key: "seed2"
    value {
      i: 69
    }
  }
}
node {
  name: "model/hidden_layer1/dropout/random_uniform/sub"
  op: "Sub"
  input: "model/hidden_layer1/dropout/random_uniform/max"
  input: "model/hidden_layer1/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/hidden_layer1/dropout/random_uniform/mul"
  op: "Mul"
  input: "model/hidden_layer1/dropout/random_uniform/RandomUniform"
  input: "model/hidden_layer1/dropout/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/hidden_layer1/dropout/random_uniform"
  op: "Add"
  input: "model/hidden_layer1/dropout/random_uniform/mul"
  input: "model/hidden_layer1/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/hidden_layer1/dropout/add"
  op: "Add"
  input: "keep_conv"
  input: "model/hidden_layer1/dropout/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/hidden_layer1/dropout/Floor"
  op: "Floor"
  input: "model/hidden_layer1/dropout/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/hidden_layer1/dropout/div"
  op: "RealDiv"
  input: "model/hidden_layer1/MaxPool"
  input: "keep_conv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/hidden_layer1/dropout/mul"
  op: "Mul"
  input: "model/hidden_layer1/dropout/div"
  input: "model/hidden_layer1/dropout/Floor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/hidden_layer2/Conv2D"
  op: "Conv2D"
  input: "model/hidden_layer1/dropout/mul"
  input: "Variable_2/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "model/hidden_layer2/Relu"
  op: "Relu"
  input: "model/hidden_layer2/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/hidden_layer2/MaxPool"
  op: "MaxPool"
  input: "model/hidden_layer2/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "model/hidden_layer2/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\000\010\000\000"
      }
    }
  }
}
node {
  name: "model/hidden_layer2/Reshape"
  op: "Reshape"
  input: "model/hidden_layer2/MaxPool"
  input: "model/hidden_layer2/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/hidden_layer2/dropout/Shape"
  op: "Shape"
  input: "model/hidden_layer2/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/hidden_layer2/dropout/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/hidden_layer2/dropout/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/hidden_layer2/dropout/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "model/hidden_layer2/dropout/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 777
    }
  }
  attr {
    key: "seed2"
    value {
      i: 85
    }
  }
}
node {
  name: "model/hidden_layer2/dropout/random_uniform/sub"
  op: "Sub"
  input: "model/hidden_layer2/dropout/random_uniform/max"
  input: "model/hidden_layer2/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/hidden_layer2/dropout/random_uniform/mul"
  op: "Mul"
  input: "model/hidden_layer2/dropout/random_uniform/RandomUniform"
  input: "model/hidden_layer2/dropout/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/hidden_layer2/dropout/random_uniform"
  op: "Add"
  input: "model/hidden_layer2/dropout/random_uniform/mul"
  input: "model/hidden_layer2/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/hidden_layer2/dropout/add"
  op: "Add"
  input: "keep_conv"
  input: "model/hidden_layer2/dropout/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/hidden_layer2/dropout/Floor"
  op: "Floor"
  input: "model/hidden_layer2/dropout/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/hidden_layer2/dropout/div"
  op: "RealDiv"
  input: "model/hidden_layer2/Reshape"
  input: "keep_conv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/hidden_layer2/dropout/mul"
  op: "Mul"
  input: "model/hidden_layer2/dropout/div"
  input: "model/hidden_layer2/dropout/Floor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/hidden_layer3/MatMul"
  op: "MatMul"
  input: "model/hidden_layer2/dropout/mul"
  input: "Variable_3/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "model/hidden_layer3/Relu"
  op: "Relu"
  input: "model/hidden_layer3/MatMul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/hidden_layer3/dropout/Shape"
  op: "Shape"
  input: "model/hidden_layer3/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/hidden_layer3/dropout/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/hidden_layer3/dropout/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/hidden_layer3/dropout/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "model/hidden_layer3/dropout/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 777
    }
  }
  attr {
    key: "seed2"
    value {
      i: 98
    }
  }
}
node {
  name: "model/hidden_layer3/dropout/random_uniform/sub"
  op: "Sub"
  input: "model/hidden_layer3/dropout/random_uniform/max"
  input: "model/hidden_layer3/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/hidden_layer3/dropout/random_uniform/mul"
  op: "Mul"
  input: "model/hidden_layer3/dropout/random_uniform/RandomUniform"
  input: "model/hidden_layer3/dropout/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/hidden_layer3/dropout/random_uniform"
  op: "Add"
  input: "model/hidden_layer3/dropout/random_uniform/mul"
  input: "model/hidden_layer3/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/hidden_layer3/dropout/add"
  op: "Add"
  input: "keep_hidden"
  input: "model/hidden_layer3/dropout/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/hidden_layer3/dropout/Floor"
  op: "Floor"
  input: "model/hidden_layer3/dropout/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/hidden_layer3/dropout/div"
  op: "RealDiv"
  input: "model/hidden_layer3/Relu"
  input: "keep_hidden"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/hidden_layer3/dropout/mul"
  op: "Mul"
  input: "model/hidden_layer3/dropout/div"
  input: "model/hidden_layer3/dropout/Floor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/output_layer/MatMul"
  op: "MatMul"
  input: "model/hidden_layer3/dropout/mul"
  input: "Variable_4/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "cost_function/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "cost_function/Shape"
  op: "Shape"
  input: "model/output_layer/MatMul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "cost_function/Rank_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "cost_function/Shape_1"
  op: "Shape"
  input: "model/output_layer/MatMul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "cost_function/Sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "cost_function/Sub"
  op: "Sub"
  input: "cost_function/Rank_1"
  input: "cost_function/Sub/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "cost_function/Slice/begin"
  op: "Pack"
  input: "cost_function/Sub"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "cost_function/Slice/size"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "cost_function/Slice"
  op: "Slice"
  input: "cost_function/Shape_1"
  input: "cost_function/Slice/begin"
  input: "cost_function/Slice/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "cost_function/concat/values_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "cost_function/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "cost_function/concat"
  op: "ConcatV2"
  input: "cost_function/concat/values_0"
  input: "cost_function/Slice"
  input: "cost_function/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "cost_function/Reshape"
  op: "Reshape"
  input: "model/output_layer/MatMul"
  input: "cost_function/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "cost_function/Rank_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "cost_function/Shape_2"
  op: "Shape"
  input: "output"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "cost_function/Sub_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "cost_function/Sub_1"
  op: "Sub"
  input: "cost_function/Rank_2"
  input: "cost_function/Sub_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "cost_function/Slice_1/begin"
  op: "Pack"
  input: "cost_function/Sub_1"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "cost_function/Slice_1/size"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "cost_function/Slice_1"
  op: "Slice"
  input: "cost_function/Shape_2"
  input: "cost_function/Slice_1/begin"
  input: "cost_function/Slice_1/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "cost_function/concat_1/values_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "cost_function/concat_1/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "cost_function/concat_1"
  op: "ConcatV2"
  input: "cost_function/concat_1/values_0"
  input: "cost_function/Slice_1"
  input: "cost_function/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "cost_function/Reshape_1"
  op: "Reshape"
  input: "output"
  input: "cost_function/concat_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "cost_function/SoftmaxCrossEntropyWithLogits"
  op: "SoftmaxCrossEntropyWithLogits"
  input: "cost_function/Reshape"
  input: "cost_function/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cost_function/Sub_2/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "cost_function/Sub_2"
  op: "Sub"
  input: "cost_function/Rank"
  input: "cost_function/Sub_2/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "cost_function/Slice_2/begin"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "cost_function/Slice_2/size"
  op: "Pack"
  input: "cost_function/Sub_2"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "cost_function/Slice_2"
  op: "Slice"
  input: "cost_function/Shape"
  input: "cost_function/Slice_2/begin"
  input: "cost_function/Slice_2/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "cost_function/Reshape_2"
  op: "Reshape"
  input: "cost_function/SoftmaxCrossEntropyWithLogits"
  input: "cost_function/Slice_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "cost_function/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "cost_function/Mean"
  op: "Mean"
  input: "cost_function/Reshape_2"
  input: "cost_function/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "optimizer/gradients/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "optimizer/gradients/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "optimizer/gradients/Fill"
  op: "Fill"
  input: "optimizer/gradients/Shape"
  input: "optimizer/gradients/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "optimizer/gradients/cost_function/Mean_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "optimizer/gradients/cost_function/Mean_grad/Reshape"
  op: "Reshape"
  input: "optimizer/gradients/Fill"
  input: "optimizer/gradients/cost_function/Mean_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optimizer/gradients/cost_function/Mean_grad/Shape"
  op: "Shape"
  input: "cost_function/Reshape_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optimizer/gradients/cost_function/Mean_grad/Tile"
  op: "Tile"
  input: "optimizer/gradients/cost_function/Mean_grad/Reshape"
  input: "optimizer/gradients/cost_function/Mean_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optimizer/gradients/cost_function/Mean_grad/Shape_1"
  op: "Shape"
  input: "cost_function/Reshape_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optimizer/gradients/cost_function/Mean_grad/Shape_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "optimizer/gradients/cost_function/Mean_grad/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "optimizer/gradients/cost_function/Mean_grad/Prod"
  op: "Prod"
  input: "optimizer/gradients/cost_function/Mean_grad/Shape_1"
  input: "optimizer/gradients/cost_function/Mean_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "optimizer/gradients/cost_function/Mean_grad/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "optimizer/gradients/cost_function/Mean_grad/Prod_1"
  op: "Prod"
  input: "optimizer/gradients/cost_function/Mean_grad/Shape_2"
  input: "optimizer/gradients/cost_function/Mean_grad/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "optimizer/gradients/cost_function/Mean_grad/Maximum/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "optimizer/gradients/cost_function/Mean_grad/Maximum"
  op: "Maximum"
  input: "optimizer/gradients/cost_function/Mean_grad/Prod_1"
  input: "optimizer/gradients/cost_function/Mean_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optimizer/gradients/cost_function/Mean_grad/floordiv"
  op: "FloorDiv"
  input: "optimizer/gradients/cost_function/Mean_grad/Prod"
  input: "optimizer/gradients/cost_function/Mean_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optimizer/gradients/cost_function/Mean_grad/Cast"
  op: "Cast"
  input: "optimizer/gradients/cost_function/Mean_grad/floordiv"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optimizer/gradients/cost_function/Mean_grad/truediv"
  op: "RealDiv"
  input: "optimizer/gradients/cost_function/Mean_grad/Tile"
  input: "optimizer/gradients/cost_function/Mean_grad/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "optimizer/gradients/cost_function/Reshape_2_grad/Shape"
  op: "Shape"
  input: "cost_function/SoftmaxCrossEntropyWithLogits"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optimizer/gradients/cost_function/Reshape_2_grad/Reshape"
  op: "Reshape"
  input: "optimizer/gradients/cost_function/Mean_grad/truediv"
  input: "optimizer/gradients/cost_function/Reshape_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optimizer/gradients/zeros_like"
  op: "ZerosLike"
  input: "cost_function/SoftmaxCrossEntropyWithLogits:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "optimizer/gradients/cost_function/SoftmaxCrossEntropyWithLogits_grad/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "optimizer/gradients/cost_function/SoftmaxCrossEntropyWithLogits_grad/ExpandDims"
  op: "ExpandDims"
  input: "optimizer/gradients/cost_function/Reshape_2_grad/Reshape"
  input: "optimizer/gradients/cost_function/SoftmaxCrossEntropyWithLogits_grad/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optimizer/gradients/cost_function/SoftmaxCrossEntropyWithLogits_grad/mul"
  op: "Mul"
  input: "optimizer/gradients/cost_function/SoftmaxCrossEntropyWithLogits_grad/ExpandDims"
  input: "cost_function/SoftmaxCrossEntropyWithLogits:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "optimizer/gradients/cost_function/Reshape_grad/Shape"
  op: "Shape"
  input: "model/output_layer/MatMul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optimizer/gradients/cost_function/Reshape_grad/Reshape"
  op: "Reshape"
  input: "optimizer/gradients/cost_function/SoftmaxCrossEntropyWithLogits_grad/mul"
  input: "optimizer/gradients/cost_function/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optimizer/gradients/model/output_layer/MatMul_grad/MatMul"
  op: "MatMul"
  input: "optimizer/gradients/cost_function/Reshape_grad/Reshape"
  input: "Variable_4/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "optimizer/gradients/model/output_layer/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "model/hidden_layer3/dropout/mul"
  input: "optimizer/gradients/cost_function/Reshape_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "optimizer/gradients/model/output_layer/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^optimizer/gradients/model/output_layer/MatMul_grad/MatMul"
  input: "^optimizer/gradients/model/output_layer/MatMul_grad/MatMul_1"
}
node {
  name: "optimizer/gradients/model/output_layer/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "optimizer/gradients/model/output_layer/MatMul_grad/MatMul"
  input: "^optimizer/gradients/model/output_layer/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizer/gradients/model/output_layer/MatMul_grad/MatMul"
      }
    }
  }
}
node {
  name: "optimizer/gradients/model/output_layer/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "optimizer/gradients/model/output_layer/MatMul_grad/MatMul_1"
  input: "^optimizer/gradients/model/output_layer/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizer/gradients/model/output_layer/MatMul_grad/MatMul_1"
      }
    }
  }
}
node {
  name: "optimizer/gradients/model/hidden_layer3/dropout/mul_grad/Shape"
  op: "Shape"
  input: "model/hidden_layer3/dropout/div"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optimizer/gradients/model/hidden_layer3/dropout/mul_grad/Shape_1"
  op: "Shape"
  input: "model/hidden_layer3/dropout/Floor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optimizer/gradients/model/hidden_layer3/dropout/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "optimizer/gradients/model/hidden_layer3/dropout/mul_grad/Shape"
  input: "optimizer/gradients/model/hidden_layer3/dropout/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optimizer/gradients/model/hidden_layer3/dropout/mul_grad/mul"
  op: "Mul"
  input: "optimizer/gradients/model/output_layer/MatMul_grad/tuple/control_dependency"
  input: "model/hidden_layer3/dropout/Floor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "optimizer/gradients/model/hidden_layer3/dropout/mul_grad/Sum"
  op: "Sum"
  input: "optimizer/gradients/model/hidden_layer3/dropout/mul_grad/mul"
  input: "optimizer/gradients/model/hidden_layer3/dropout/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "optimizer/gradients/model/hidden_layer3/dropout/mul_grad/Reshape"
  op: "Reshape"
  input: "optimizer/gradients/model/hidden_layer3/dropout/mul_grad/Sum"
  input: "optimizer/gradients/model/hidden_layer3/dropout/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optimizer/gradients/model/hidden_layer3/dropout/mul_grad/mul_1"
  op: "Mul"
  input: "model/hidden_layer3/dropout/div"
  input: "optimizer/gradients/model/output_layer/MatMul_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "optimizer/gradients/model/hidden_layer3/dropout/mul_grad/Sum_1"
  op: "Sum"
  input: "optimizer/gradients/model/hidden_layer3/dropout/mul_grad/mul_1"
  input: "optimizer/gradients/model/hidden_layer3/dropout/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "optimizer/gradients/model/hidden_layer3/dropout/mul_grad/Reshape_1"
  op: "Reshape"
  input: "optimizer/gradients/model/hidden_layer3/dropout/mul_grad/Sum_1"
  input: "optimizer/gradients/model/hidden_layer3/dropout/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optimizer/gradients/model/hidden_layer3/dropout/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^optimizer/gradients/model/hidden_layer3/dropout/mul_grad/Reshape"
  input: "^optimizer/gradients/model/hidden_layer3/dropout/mul_grad/Reshape_1"
}
node {
  name: "optimizer/gradients/model/hidden_layer3/dropout/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "optimizer/gradients/model/hidden_layer3/dropout/mul_grad/Reshape"
  input: "^optimizer/gradients/model/hidden_layer3/dropout/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizer/gradients/model/hidden_layer3/dropout/mul_grad/Reshape"
      }
    }
  }
}
node {
  name: "optimizer/gradients/model/hidden_layer3/dropout/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "optimizer/gradients/model/hidden_layer3/dropout/mul_grad/Reshape_1"
  input: "^optimizer/gradients/model/hidden_layer3/dropout/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizer/gradients/model/hidden_layer3/dropout/mul_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "optimizer/gradients/model/hidden_layer3/dropout/div_grad/Shape"
  op: "Shape"
  input: "model/hidden_layer3/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optimizer/gradients/model/hidden_layer3/dropout/div_grad/Shape_1"
  op: "Shape"
  input: "keep_hidden"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optimizer/gradients/model/hidden_layer3/dropout/div_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "optimizer/gradients/model/hidden_layer3/dropout/div_grad/Shape"
  input: "optimizer/gradients/model/hidden_layer3/dropout/div_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optimizer/gradients/model/hidden_layer3/dropout/div_grad/RealDiv"
  op: "RealDiv"
  input: "optimizer/gradients/model/hidden_layer3/dropout/mul_grad/tuple/control_dependency"
  input: "keep_hidden"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "optimizer/gradients/model/hidden_layer3/dropout/div_grad/Sum"
  op: "Sum"
  input: "optimizer/gradients/model/hidden_layer3/dropout/div_grad/RealDiv"
  input: "optimizer/gradients/model/hidden_layer3/dropout/div_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "optimizer/gradients/model/hidden_layer3/dropout/div_grad/Reshape"
  op: "Reshape"
  input: "optimizer/gradients/model/hidden_layer3/dropout/div_grad/Sum"
  input: "optimizer/gradients/model/hidden_layer3/dropout/div_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optimizer/gradients/model/hidden_layer3/dropout/div_grad/Neg"
  op: "Neg"
  input: "model/hidden_layer3/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "optimizer/gradients/model/hidden_layer3/dropout/div_grad/RealDiv_1"
  op: "RealDiv"
  input: "optimizer/gradients/model/hidden_layer3/dropout/div_grad/Neg"
  input: "keep_hidden"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "optimizer/gradients/model/hidden_layer3/dropout/div_grad/RealDiv_2"
  op: "RealDiv"
  input: "optimizer/gradients/model/hidden_layer3/dropout/div_grad/RealDiv_1"
  input: "keep_hidden"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "optimizer/gradients/model/hidden_layer3/dropout/div_grad/mul"
  op: "Mul"
  input: "optimizer/gradients/model/hidden_layer3/dropout/mul_grad/tuple/control_dependency"
  input: "optimizer/gradients/model/hidden_layer3/dropout/div_grad/RealDiv_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "optimizer/gradients/model/hidden_layer3/dropout/div_grad/Sum_1"
  op: "Sum"
  input: "optimizer/gradients/model/hidden_layer3/dropout/div_grad/mul"
  input: "optimizer/gradients/model/hidden_layer3/dropout/div_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "optimizer/gradients/model/hidden_layer3/dropout/div_grad/Reshape_1"
  op: "Reshape"
  input: "optimizer/gradients/model/hidden_layer3/dropout/div_grad/Sum_1"
  input: "optimizer/gradients/model/hidden_layer3/dropout/div_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optimizer/gradients/model/hidden_layer3/dropout/div_grad/tuple/group_deps"
  op: "NoOp"
  input: "^optimizer/gradients/model/hidden_layer3/dropout/div_grad/Reshape"
  input: "^optimizer/gradients/model/hidden_layer3/dropout/div_grad/Reshape_1"
}
node {
  name: "optimizer/gradients/model/hidden_layer3/dropout/div_grad/tuple/control_dependency"
  op: "Identity"
  input: "optimizer/gradients/model/hidden_layer3/dropout/div_grad/Reshape"
  input: "^optimizer/gradients/model/hidden_layer3/dropout/div_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizer/gradients/model/hidden_layer3/dropout/div_grad/Reshape"
      }
    }
  }
}
node {
  name: "optimizer/gradients/model/hidden_layer3/dropout/div_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "optimizer/gradients/model/hidden_layer3/dropout/div_grad/Reshape_1"
  input: "^optimizer/gradients/model/hidden_layer3/dropout/div_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizer/gradients/model/hidden_layer3/dropout/div_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "optimizer/gradients/model/hidden_layer3/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "optimizer/gradients/model/hidden_layer3/dropout/div_grad/tuple/control_dependency"
  input: "model/hidden_layer3/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "optimizer/gradients/model/hidden_layer3/MatMul_grad/MatMul"
  op: "MatMul"
  input: "optimizer/gradients/model/hidden_layer3/Relu_grad/ReluGrad"
  input: "Variable_3/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "optimizer/gradients/model/hidden_layer3/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "model/hidden_layer2/dropout/mul"
  input: "optimizer/gradients/model/hidden_layer3/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "optimizer/gradients/model/hidden_layer3/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^optimizer/gradients/model/hidden_layer3/MatMul_grad/MatMul"
  input: "^optimizer/gradients/model/hidden_layer3/MatMul_grad/MatMul_1"
}
node {
  name: "optimizer/gradients/model/hidden_layer3/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "optimizer/gradients/model/hidden_layer3/MatMul_grad/MatMul"
  input: "^optimizer/gradients/model/hidden_layer3/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizer/gradients/model/hidden_layer3/MatMul_grad/MatMul"
      }
    }
  }
}
node {
  name: "optimizer/gradients/model/hidden_layer3/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "optimizer/gradients/model/hidden_layer3/MatMul_grad/MatMul_1"
  input: "^optimizer/gradients/model/hidden_layer3/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizer/gradients/model/hidden_layer3/MatMul_grad/MatMul_1"
      }
    }
  }
}
node {
  name: "optimizer/gradients/model/hidden_layer2/dropout/mul_grad/Shape"
  op: "Shape"
  input: "model/hidden_layer2/dropout/div"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optimizer/gradients/model/hidden_layer2/dropout/mul_grad/Shape_1"
  op: "Shape"
  input: "model/hidden_layer2/dropout/Floor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optimizer/gradients/model/hidden_layer2/dropout/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "optimizer/gradients/model/hidden_layer2/dropout/mul_grad/Shape"
  input: "optimizer/gradients/model/hidden_layer2/dropout/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optimizer/gradients/model/hidden_layer2/dropout/mul_grad/mul"
  op: "Mul"
  input: "optimizer/gradients/model/hidden_layer3/MatMul_grad/tuple/control_dependency"
  input: "model/hidden_layer2/dropout/Floor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "optimizer/gradients/model/hidden_layer2/dropout/mul_grad/Sum"
  op: "Sum"
  input: "optimizer/gradients/model/hidden_layer2/dropout/mul_grad/mul"
  input: "optimizer/gradients/model/hidden_layer2/dropout/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "optimizer/gradients/model/hidden_layer2/dropout/mul_grad/Reshape"
  op: "Reshape"
  input: "optimizer/gradients/model/hidden_layer2/dropout/mul_grad/Sum"
  input: "optimizer/gradients/model/hidden_layer2/dropout/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optimizer/gradients/model/hidden_layer2/dropout/mul_grad/mul_1"
  op: "Mul"
  input: "model/hidden_layer2/dropout/div"
  input: "optimizer/gradients/model/hidden_layer3/MatMul_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "optimizer/gradients/model/hidden_layer2/dropout/mul_grad/Sum_1"
  op: "Sum"
  input: "optimizer/gradients/model/hidden_layer2/dropout/mul_grad/mul_1"
  input: "optimizer/gradients/model/hidden_layer2/dropout/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "optimizer/gradients/model/hidden_layer2/dropout/mul_grad/Reshape_1"
  op: "Reshape"
  input: "optimizer/gradients/model/hidden_layer2/dropout/mul_grad/Sum_1"
  input: "optimizer/gradients/model/hidden_layer2/dropout/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optimizer/gradients/model/hidden_layer2/dropout/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^optimizer/gradients/model/hidden_layer2/dropout/mul_grad/Reshape"
  input: "^optimizer/gradients/model/hidden_layer2/dropout/mul_grad/Reshape_1"
}
node {
  name: "optimizer/gradients/model/hidden_layer2/dropout/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "optimizer/gradients/model/hidden_layer2/dropout/mul_grad/Reshape"
  input: "^optimizer/gradients/model/hidden_layer2/dropout/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizer/gradients/model/hidden_layer2/dropout/mul_grad/Reshape"
      }
    }
  }
}
node {
  name: "optimizer/gradients/model/hidden_layer2/dropout/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "optimizer/gradients/model/hidden_layer2/dropout/mul_grad/Reshape_1"
  input: "^optimizer/gradients/model/hidden_layer2/dropout/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizer/gradients/model/hidden_layer2/dropout/mul_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "optimizer/gradients/model/hidden_layer2/dropout/div_grad/Shape"
  op: "Shape"
  input: "model/hidden_layer2/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optimizer/gradients/model/hidden_layer2/dropout/div_grad/Shape_1"
  op: "Shape"
  input: "keep_conv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optimizer/gradients/model/hidden_layer2/dropout/div_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "optimizer/gradients/model/hidden_layer2/dropout/div_grad/Shape"
  input: "optimizer/gradients/model/hidden_layer2/dropout/div_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optimizer/gradients/model/hidden_layer2/dropout/div_grad/RealDiv"
  op: "RealDiv"
  input: "optimizer/gradients/model/hidden_layer2/dropout/mul_grad/tuple/control_dependency"
  input: "keep_conv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "optimizer/gradients/model/hidden_layer2/dropout/div_grad/Sum"
  op: "Sum"
  input: "optimizer/gradients/model/hidden_layer2/dropout/div_grad/RealDiv"
  input: "optimizer/gradients/model/hidden_layer2/dropout/div_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "optimizer/gradients/model/hidden_layer2/dropout/div_grad/Reshape"
  op: "Reshape"
  input: "optimizer/gradients/model/hidden_layer2/dropout/div_grad/Sum"
  input: "optimizer/gradients/model/hidden_layer2/dropout/div_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optimizer/gradients/model/hidden_layer2/dropout/div_grad/Neg"
  op: "Neg"
  input: "model/hidden_layer2/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "optimizer/gradients/model/hidden_layer2/dropout/div_grad/RealDiv_1"
  op: "RealDiv"
  input: "optimizer/gradients/model/hidden_layer2/dropout/div_grad/Neg"
  input: "keep_conv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "optimizer/gradients/model/hidden_layer2/dropout/div_grad/RealDiv_2"
  op: "RealDiv"
  input: "optimizer/gradients/model/hidden_layer2/dropout/div_grad/RealDiv_1"
  input: "keep_conv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "optimizer/gradients/model/hidden_layer2/dropout/div_grad/mul"
  op: "Mul"
  input: "optimizer/gradients/model/hidden_layer2/dropout/mul_grad/tuple/control_dependency"
  input: "optimizer/gradients/model/hidden_layer2/dropout/div_grad/RealDiv_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "optimizer/gradients/model/hidden_layer2/dropout/div_grad/Sum_1"
  op: "Sum"
  input: "optimizer/gradients/model/hidden_layer2/dropout/div_grad/mul"
  input: "optimizer/gradients/model/hidden_layer2/dropout/div_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "optimizer/gradients/model/hidden_layer2/dropout/div_grad/Reshape_1"
  op: "Reshape"
  input: "optimizer/gradients/model/hidden_layer2/dropout/div_grad/Sum_1"
  input: "optimizer/gradients/model/hidden_layer2/dropout/div_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optimizer/gradients/model/hidden_layer2/dropout/div_grad/tuple/group_deps"
  op: "NoOp"
  input: "^optimizer/gradients/model/hidden_layer2/dropout/div_grad/Reshape"
  input: "^optimizer/gradients/model/hidden_layer2/dropout/div_grad/Reshape_1"
}
node {
  name: "optimizer/gradients/model/hidden_layer2/dropout/div_grad/tuple/control_dependency"
  op: "Identity"
  input: "optimizer/gradients/model/hidden_layer2/dropout/div_grad/Reshape"
  input: "^optimizer/gradients/model/hidden_layer2/dropout/div_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizer/gradients/model/hidden_layer2/dropout/div_grad/Reshape"
      }
    }
  }
}
node {
  name: "optimizer/gradients/model/hidden_layer2/dropout/div_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "optimizer/gradients/model/hidden_layer2/dropout/div_grad/Reshape_1"
  input: "^optimizer/gradients/model/hidden_layer2/dropout/div_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizer/gradients/model/hidden_layer2/dropout/div_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "optimizer/gradients/model/hidden_layer2/Reshape_grad/Shape"
  op: "Shape"
  input: "model/hidden_layer2/MaxPool"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optimizer/gradients/model/hidden_layer2/Reshape_grad/Reshape"
  op: "Reshape"
  input: "optimizer/gradients/model/hidden_layer2/dropout/div_grad/tuple/control_dependency"
  input: "optimizer/gradients/model/hidden_layer2/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optimizer/gradients/model/hidden_layer2/MaxPool_grad/MaxPoolGrad"
  op: "MaxPoolGrad"
  input: "model/hidden_layer2/Relu"
  input: "model/hidden_layer2/MaxPool"
  input: "optimizer/gradients/model/hidden_layer2/Reshape_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "optimizer/gradients/model/hidden_layer2/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "optimizer/gradients/model/hidden_layer2/MaxPool_grad/MaxPoolGrad"
  input: "model/hidden_layer2/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "optimizer/gradients/model/hidden_layer2/Conv2D_grad/Shape"
  op: "Shape"
  input: "model/hidden_layer1/dropout/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optimizer/gradients/model/hidden_layer2/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "optimizer/gradients/model/hidden_layer2/Conv2D_grad/Shape"
  input: "Variable_2/read"
  input: "optimizer/gradients/model/hidden_layer2/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "optimizer/gradients/model/hidden_layer2/Conv2D_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "optimizer/gradients/model/hidden_layer2/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "model/hidden_layer1/dropout/mul"
  input: "optimizer/gradients/model/hidden_layer2/Conv2D_grad/Shape_1"
  input: "optimizer/gradients/model/hidden_layer2/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "optimizer/gradients/model/hidden_layer2/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^optimizer/gradients/model/hidden_layer2/Conv2D_grad/Conv2DBackpropInput"
  input: "^optimizer/gradients/model/hidden_layer2/Conv2D_grad/Conv2DBackpropFilter"
}
node {
  name: "optimizer/gradients/model/hidden_layer2/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "optimizer/gradients/model/hidden_layer2/Conv2D_grad/Conv2DBackpropInput"
  input: "^optimizer/gradients/model/hidden_layer2/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizer/gradients/model/hidden_layer2/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "optimizer/gradients/model/hidden_layer2/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "optimizer/gradients/model/hidden_layer2/Conv2D_grad/Conv2DBackpropFilter"
  input: "^optimizer/gradients/model/hidden_layer2/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizer/gradients/model/hidden_layer2/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "optimizer/gradients/model/hidden_layer1/dropout/mul_grad/Shape"
  op: "Shape"
  input: "model/hidden_layer1/dropout/div"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optimizer/gradients/model/hidden_layer1/dropout/mul_grad/Shape_1"
  op: "Shape"
  input: "model/hidden_layer1/dropout/Floor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optimizer/gradients/model/hidden_layer1/dropout/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "optimizer/gradients/model/hidden_layer1/dropout/mul_grad/Shape"
  input: "optimizer/gradients/model/hidden_layer1/dropout/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optimizer/gradients/model/hidden_layer1/dropout/mul_grad/mul"
  op: "Mul"
  input: "optimizer/gradients/model/hidden_layer2/Conv2D_grad/tuple/control_dependency"
  input: "model/hidden_layer1/dropout/Floor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "optimizer/gradients/model/hidden_layer1/dropout/mul_grad/Sum"
  op: "Sum"
  input: "optimizer/gradients/model/hidden_layer1/dropout/mul_grad/mul"
  input: "optimizer/gradients/model/hidden_layer1/dropout/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "optimizer/gradients/model/hidden_layer1/dropout/mul_grad/Reshape"
  op: "Reshape"
  input: "optimizer/gradients/model/hidden_layer1/dropout/mul_grad/Sum"
  input: "optimizer/gradients/model/hidden_layer1/dropout/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optimizer/gradients/model/hidden_layer1/dropout/mul_grad/mul_1"
  op: "Mul"
  input: "model/hidden_layer1/dropout/div"
  input: "optimizer/gradients/model/hidden_layer2/Conv2D_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "optimizer/gradients/model/hidden_layer1/dropout/mul_grad/Sum_1"
  op: "Sum"
  input: "optimizer/gradients/model/hidden_layer1/dropout/mul_grad/mul_1"
  input: "optimizer/gradients/model/hidden_layer1/dropout/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "optimizer/gradients/model/hidden_layer1/dropout/mul_grad/Reshape_1"
  op: "Reshape"
  input: "optimizer/gradients/model/hidden_layer1/dropout/mul_grad/Sum_1"
  input: "optimizer/gradients/model/hidden_layer1/dropout/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optimizer/gradients/model/hidden_layer1/dropout/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^optimizer/gradients/model/hidden_layer1/dropout/mul_grad/Reshape"
  input: "^optimizer/gradients/model/hidden_layer1/dropout/mul_grad/Reshape_1"
}
node {
  name: "optimizer/gradients/model/hidden_layer1/dropout/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "optimizer/gradients/model/hidden_layer1/dropout/mul_grad/Reshape"
  input: "^optimizer/gradients/model/hidden_layer1/dropout/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizer/gradients/model/hidden_layer1/dropout/mul_grad/Reshape"
      }
    }
  }
}
node {
  name: "optimizer/gradients/model/hidden_layer1/dropout/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "optimizer/gradients/model/hidden_layer1/dropout/mul_grad/Reshape_1"
  input: "^optimizer/gradients/model/hidden_layer1/dropout/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizer/gradients/model/hidden_layer1/dropout/mul_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "optimizer/gradients/model/hidden_layer1/dropout/div_grad/Shape"
  op: "Shape"
  input: "model/hidden_layer1/MaxPool"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optimizer/gradients/model/hidden_layer1/dropout/div_grad/Shape_1"
  op: "Shape"
  input: "keep_conv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optimizer/gradients/model/hidden_layer1/dropout/div_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "optimizer/gradients/model/hidden_layer1/dropout/div_grad/Shape"
  input: "optimizer/gradients/model/hidden_layer1/dropout/div_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optimizer/gradients/model/hidden_layer1/dropout/div_grad/RealDiv"
  op: "RealDiv"
  input: "optimizer/gradients/model/hidden_layer1/dropout/mul_grad/tuple/control_dependency"
  input: "keep_conv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "optimizer/gradients/model/hidden_layer1/dropout/div_grad/Sum"
  op: "Sum"
  input: "optimizer/gradients/model/hidden_layer1/dropout/div_grad/RealDiv"
  input: "optimizer/gradients/model/hidden_layer1/dropout/div_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "optimizer/gradients/model/hidden_layer1/dropout/div_grad/Reshape"
  op: "Reshape"
  input: "optimizer/gradients/model/hidden_layer1/dropout/div_grad/Sum"
  input: "optimizer/gradients/model/hidden_layer1/dropout/div_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optimizer/gradients/model/hidden_layer1/dropout/div_grad/Neg"
  op: "Neg"
  input: "model/hidden_layer1/MaxPool"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "optimizer/gradients/model/hidden_layer1/dropout/div_grad/RealDiv_1"
  op: "RealDiv"
  input: "optimizer/gradients/model/hidden_layer1/dropout/div_grad/Neg"
  input: "keep_conv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "optimizer/gradients/model/hidden_layer1/dropout/div_grad/RealDiv_2"
  op: "RealDiv"
  input: "optimizer/gradients/model/hidden_layer1/dropout/div_grad/RealDiv_1"
  input: "keep_conv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "optimizer/gradients/model/hidden_layer1/dropout/div_grad/mul"
  op: "Mul"
  input: "optimizer/gradients/model/hidden_layer1/dropout/mul_grad/tuple/control_dependency"
  input: "optimizer/gradients/model/hidden_layer1/dropout/div_grad/RealDiv_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "optimizer/gradients/model/hidden_layer1/dropout/div_grad/Sum_1"
  op: "Sum"
  input: "optimizer/gradients/model/hidden_layer1/dropout/div_grad/mul"
  input: "optimizer/gradients/model/hidden_layer1/dropout/div_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "optimizer/gradients/model/hidden_layer1/dropout/div_grad/Reshape_1"
  op: "Reshape"
  input: "optimizer/gradients/model/hidden_layer1/dropout/div_grad/Sum_1"
  input: "optimizer/gradients/model/hidden_layer1/dropout/div_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optimizer/gradients/model/hidden_layer1/dropout/div_grad/tuple/group_deps"
  op: "NoOp"
  input: "^optimizer/gradients/model/hidden_layer1/dropout/div_grad/Reshape"
  input: "^optimizer/gradients/model/hidden_layer1/dropout/div_grad/Reshape_1"
}
node {
  name: "optimizer/gradients/model/hidden_layer1/dropout/div_grad/tuple/control_dependency"
  op: "Identity"
  input: "optimizer/gradients/model/hidden_layer1/dropout/div_grad/Reshape"
  input: "^optimizer/gradients/model/hidden_layer1/dropout/div_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizer/gradients/model/hidden_layer1/dropout/div_grad/Reshape"
      }
    }
  }
}
node {
  name: "optimizer/gradients/model/hidden_layer1/dropout/div_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "optimizer/gradients/model/hidden_layer1/dropout/div_grad/Reshape_1"
  input: "^optimizer/gradients/model/hidden_layer1/dropout/div_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizer/gradients/model/hidden_layer1/dropout/div_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "optimizer/gradients/model/hidden_layer1/MaxPool_grad/MaxPoolGrad"
  op: "MaxPoolGrad"
  input: "model/hidden_layer1/Relu"
  input: "model/hidden_layer1/MaxPool"
  input: "optimizer/gradients/model/hidden_layer1/dropout/div_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "optimizer/gradients/model/hidden_layer1/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "optimizer/gradients/model/hidden_layer1/MaxPool_grad/MaxPoolGrad"
  input: "model/hidden_layer1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "optimizer/gradients/model/hidden_layer1/Conv2D_grad/Shape"
  op: "Shape"
  input: "model/input_layer/dropout/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optimizer/gradients/model/hidden_layer1/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "optimizer/gradients/model/hidden_layer1/Conv2D_grad/Shape"
  input: "Variable_1/read"
  input: "optimizer/gradients/model/hidden_layer1/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "optimizer/gradients/model/hidden_layer1/Conv2D_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "optimizer/gradients/model/hidden_layer1/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "model/input_layer/dropout/mul"
  input: "optimizer/gradients/model/hidden_layer1/Conv2D_grad/Shape_1"
  input: "optimizer/gradients/model/hidden_layer1/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "optimizer/gradients/model/hidden_layer1/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^optimizer/gradients/model/hidden_layer1/Conv2D_grad/Conv2DBackpropInput"
  input: "^optimizer/gradients/model/hidden_layer1/Conv2D_grad/Conv2DBackpropFilter"
}
node {
  name: "optimizer/gradients/model/hidden_layer1/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "optimizer/gradients/model/hidden_layer1/Conv2D_grad/Conv2DBackpropInput"
  input: "^optimizer/gradients/model/hidden_layer1/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizer/gradients/model/hidden_layer1/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "optimizer/gradients/model/hidden_layer1/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "optimizer/gradients/model/hidden_layer1/Conv2D_grad/Conv2DBackpropFilter"
  input: "^optimizer/gradients/model/hidden_layer1/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizer/gradients/model/hidden_layer1/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "optimizer/gradients/model/input_layer/dropout/mul_grad/Shape"
  op: "Shape"
  input: "model/input_layer/dropout/div"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optimizer/gradients/model/input_layer/dropout/mul_grad/Shape_1"
  op: "Shape"
  input: "model/input_layer/dropout/Floor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optimizer/gradients/model/input_layer/dropout/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "optimizer/gradients/model/input_layer/dropout/mul_grad/Shape"
  input: "optimizer/gradients/model/input_layer/dropout/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optimizer/gradients/model/input_layer/dropout/mul_grad/mul"
  op: "Mul"
  input: "optimizer/gradients/model/hidden_layer1/Conv2D_grad/tuple/control_dependency"
  input: "model/input_layer/dropout/Floor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "optimizer/gradients/model/input_layer/dropout/mul_grad/Sum"
  op: "Sum"
  input: "optimizer/gradients/model/input_layer/dropout/mul_grad/mul"
  input: "optimizer/gradients/model/input_layer/dropout/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "optimizer/gradients/model/input_layer/dropout/mul_grad/Reshape"
  op: "Reshape"
  input: "optimizer/gradients/model/input_layer/dropout/mul_grad/Sum"
  input: "optimizer/gradients/model/input_layer/dropout/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optimizer/gradients/model/input_layer/dropout/mul_grad/mul_1"
  op: "Mul"
  input: "model/input_layer/dropout/div"
  input: "optimizer/gradients/model/hidden_layer1/Conv2D_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "optimizer/gradients/model/input_layer/dropout/mul_grad/Sum_1"
  op: "Sum"
  input: "optimizer/gradients/model/input_layer/dropout/mul_grad/mul_1"
  input: "optimizer/gradients/model/input_layer/dropout/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "optimizer/gradients/model/input_layer/dropout/mul_grad/Reshape_1"
  op: "Reshape"
  input: "optimizer/gradients/model/input_layer/dropout/mul_grad/Sum_1"
  input: "optimizer/gradients/model/input_layer/dropout/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optimizer/gradients/model/input_layer/dropout/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^optimizer/gradients/model/input_layer/dropout/mul_grad/Reshape"
  input: "^optimizer/gradients/model/input_layer/dropout/mul_grad/Reshape_1"
}
node {
  name: "optimizer/gradients/model/input_layer/dropout/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "optimizer/gradients/model/input_layer/dropout/mul_grad/Reshape"
  input: "^optimizer/gradients/model/input_layer/dropout/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizer/gradients/model/input_layer/dropout/mul_grad/Reshape"
      }
    }
  }
}
node {
  name: "optimizer/gradients/model/input_layer/dropout/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "optimizer/gradients/model/input_layer/dropout/mul_grad/Reshape_1"
  input: "^optimizer/gradients/model/input_layer/dropout/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizer/gradients/model/input_layer/dropout/mul_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "optimizer/gradients/model/input_layer/dropout/div_grad/Shape"
  op: "Shape"
  input: "model/input_layer/MaxPool"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optimizer/gradients/model/input_layer/dropout/div_grad/Shape_1"
  op: "Shape"
  input: "keep_conv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optimizer/gradients/model/input_layer/dropout/div_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "optimizer/gradients/model/input_layer/dropout/div_grad/Shape"
  input: "optimizer/gradients/model/input_layer/dropout/div_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optimizer/gradients/model/input_layer/dropout/div_grad/RealDiv"
  op: "RealDiv"
  input: "optimizer/gradients/model/input_layer/dropout/mul_grad/tuple/control_dependency"
  input: "keep_conv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "optimizer/gradients/model/input_layer/dropout/div_grad/Sum"
  op: "Sum"
  input: "optimizer/gradients/model/input_layer/dropout/div_grad/RealDiv"
  input: "optimizer/gradients/model/input_layer/dropout/div_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "optimizer/gradients/model/input_layer/dropout/div_grad/Reshape"
  op: "Reshape"
  input: "optimizer/gradients/model/input_layer/dropout/div_grad/Sum"
  input: "optimizer/gradients/model/input_layer/dropout/div_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optimizer/gradients/model/input_layer/dropout/div_grad/Neg"
  op: "Neg"
  input: "model/input_layer/MaxPool"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "optimizer/gradients/model/input_layer/dropout/div_grad/RealDiv_1"
  op: "RealDiv"
  input: "optimizer/gradients/model/input_layer/dropout/div_grad/Neg"
  input: "keep_conv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "optimizer/gradients/model/input_layer/dropout/div_grad/RealDiv_2"
  op: "RealDiv"
  input: "optimizer/gradients/model/input_layer/dropout/div_grad/RealDiv_1"
  input: "keep_conv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "optimizer/gradients/model/input_layer/dropout/div_grad/mul"
  op: "Mul"
  input: "optimizer/gradients/model/input_layer/dropout/mul_grad/tuple/control_dependency"
  input: "optimizer/gradients/model/input_layer/dropout/div_grad/RealDiv_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "optimizer/gradients/model/input_layer/dropout/div_grad/Sum_1"
  op: "Sum"
  input: "optimizer/gradients/model/input_layer/dropout/div_grad/mul"
  input: "optimizer/gradients/model/input_layer/dropout/div_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "optimizer/gradients/model/input_layer/dropout/div_grad/Reshape_1"
  op: "Reshape"
  input: "optimizer/gradients/model/input_layer/dropout/div_grad/Sum_1"
  input: "optimizer/gradients/model/input_layer/dropout/div_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optimizer/gradients/model/input_layer/dropout/div_grad/tuple/group_deps"
  op: "NoOp"
  input: "^optimizer/gradients/model/input_layer/dropout/div_grad/Reshape"
  input: "^optimizer/gradients/model/input_layer/dropout/div_grad/Reshape_1"
}
node {
  name: "optimizer/gradients/model/input_layer/dropout/div_grad/tuple/control_dependency"
  op: "Identity"
  input: "optimizer/gradients/model/input_layer/dropout/div_grad/Reshape"
  input: "^optimizer/gradients/model/input_layer/dropout/div_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizer/gradients/model/input_layer/dropout/div_grad/Reshape"
      }
    }
  }
}
node {
  name: "optimizer/gradients/model/input_layer/dropout/div_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "optimizer/gradients/model/input_layer/dropout/div_grad/Reshape_1"
  input: "^optimizer/gradients/model/input_layer/dropout/div_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizer/gradients/model/input_layer/dropout/div_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "optimizer/gradients/model/input_layer/MaxPool_grad/MaxPoolGrad"
  op: "MaxPoolGrad"
  input: "model/input_layer/Relu"
  input: "model/input_layer/MaxPool"
  input: "optimizer/gradients/model/input_layer/dropout/div_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "optimizer/gradients/model/input_layer/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "optimizer/gradients/model/input_layer/MaxPool_grad/MaxPoolGrad"
  input: "model/input_layer/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "optimizer/gradients/model/input_layer/Conv2D_grad/Shape"
  op: "Shape"
  input: "input"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optimizer/gradients/model/input_layer/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "optimizer/gradients/model/input_layer/Conv2D_grad/Shape"
  input: "Variable/read"
  input: "optimizer/gradients/model/input_layer/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "optimizer/gradients/model/input_layer/Conv2D_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\001\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "optimizer/gradients/model/input_layer/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "input"
  input: "optimizer/gradients/model/input_layer/Conv2D_grad/Shape_1"
  input: "optimizer/gradients/model/input_layer/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "optimizer/gradients/model/input_layer/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^optimizer/gradients/model/input_layer/Conv2D_grad/Conv2DBackpropInput"
  input: "^optimizer/gradients/model/input_layer/Conv2D_grad/Conv2DBackpropFilter"
}
node {
  name: "optimizer/gradients/model/input_layer/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "optimizer/gradients/model/input_layer/Conv2D_grad/Conv2DBackpropInput"
  input: "^optimizer/gradients/model/input_layer/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizer/gradients/model/input_layer/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "optimizer/gradients/model/input_layer/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "optimizer/gradients/model/input_layer/Conv2D_grad/Conv2DBackpropFilter"
  input: "^optimizer/gradients/model/input_layer/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optimizer/gradients/model/input_layer/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "Variable/RMSProp/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Variable/RMSProp"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Variable/RMSProp/Assign"
  op: "Assign"
  input: "Variable/RMSProp"
  input: "Variable/RMSProp/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Variable/RMSProp/read"
  op: "Identity"
  input: "Variable/RMSProp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable"
      }
    }
  }
}
node {
  name: "Variable/RMSProp_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Variable/RMSProp_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Variable/RMSProp_1/Assign"
  op: "Assign"
  input: "Variable/RMSProp_1"
  input: "Variable/RMSProp_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Variable/RMSProp_1/read"
  op: "Identity"
  input: "Variable/RMSProp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable"
      }
    }
  }
}
node {
  name: "Variable_1/RMSProp/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Variable_1/RMSProp"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Variable_1/RMSProp/Assign"
  op: "Assign"
  input: "Variable_1/RMSProp"
  input: "Variable_1/RMSProp/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_1"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Variable_1/RMSProp/read"
  op: "Identity"
  input: "Variable_1/RMSProp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_1"
      }
    }
  }
}
node {
  name: "Variable_1/RMSProp_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Variable_1/RMSProp_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Variable_1/RMSProp_1/Assign"
  op: "Assign"
  input: "Variable_1/RMSProp_1"
  input: "Variable_1/RMSProp_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_1"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Variable_1/RMSProp_1/read"
  op: "Identity"
  input: "Variable_1/RMSProp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_1"
      }
    }
  }
}
node {
  name: "Variable_2/RMSProp/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Variable_2/RMSProp"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_2"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Variable_2/RMSProp/Assign"
  op: "Assign"
  input: "Variable_2/RMSProp"
  input: "Variable_2/RMSProp/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_2"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Variable_2/RMSProp/read"
  op: "Identity"
  input: "Variable_2/RMSProp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_2"
      }
    }
  }
}
node {
  name: "Variable_2/RMSProp_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Variable_2/RMSProp_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_2"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Variable_2/RMSProp_1/Assign"
  op: "Assign"
  input: "Variable_2/RMSProp_1"
  input: "Variable_2/RMSProp_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_2"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Variable_2/RMSProp_1/read"
  op: "Identity"
  input: "Variable_2/RMSProp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_2"
      }
    }
  }
}
node {
  name: "Variable_3/RMSProp/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_3"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2048
          }
          dim {
            size: 625
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Variable_3/RMSProp"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_3"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2048
        }
        dim {
          size: 625
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Variable_3/RMSProp/Assign"
  op: "Assign"
  input: "Variable_3/RMSProp"
  input: "Variable_3/RMSProp/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_3"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Variable_3/RMSProp/read"
  op: "Identity"
  input: "Variable_3/RMSProp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_3"
      }
    }
  }
}
node {
  name: "Variable_3/RMSProp_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_3"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2048
          }
          dim {
            size: 625
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Variable_3/RMSProp_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_3"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2048
        }
        dim {
          size: 625
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Variable_3/RMSProp_1/Assign"
  op: "Assign"
  input: "Variable_3/RMSProp_1"
  input: "Variable_3/RMSProp_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_3"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Variable_3/RMSProp_1/read"
  op: "Identity"
  input: "Variable_3/RMSProp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_3"
      }
    }
  }
}
node {
  name: "Variable_4/RMSProp/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_4"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 625
          }
          dim {
            size: 10
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Variable_4/RMSProp"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_4"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 625
        }
        dim {
          size: 10
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Variable_4/RMSProp/Assign"
  op: "Assign"
  input: "Variable_4/RMSProp"
  input: "Variable_4/RMSProp/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_4"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Variable_4/RMSProp/read"
  op: "Identity"
  input: "Variable_4/RMSProp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_4"
      }
    }
  }
}
node {
  name: "Variable_4/RMSProp_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_4"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 625
          }
          dim {
            size: 10
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Variable_4/RMSProp_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_4"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 625
        }
        dim {
          size: 10
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Variable_4/RMSProp_1/Assign"
  op: "Assign"
  input: "Variable_4/RMSProp_1"
  input: "Variable_4/RMSProp_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_4"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Variable_4/RMSProp_1/read"
  op: "Identity"
  input: "Variable_4/RMSProp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_4"
      }
    }
  }
}
node {
  name: "optimizer/RMSProp/learning_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000475
      }
    }
  }
}
node {
  name: "optimizer/RMSProp/decay"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.899999976158
      }
    }
  }
}
node {
  name: "optimizer/RMSProp/momentum"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "optimizer/RMSProp/epsilon"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.00000001335e-10
      }
    }
  }
}
node {
  name: "optimizer/RMSProp/update_Variable/ApplyRMSProp"
  op: "ApplyRMSProp"
  input: "Variable"
  input: "Variable/RMSProp"
  input: "Variable/RMSProp_1"
  input: "optimizer/RMSProp/learning_rate"
  input: "optimizer/RMSProp/decay"
  input: "optimizer/RMSProp/momentum"
  input: "optimizer/RMSProp/epsilon"
  input: "optimizer/gradients/model/input_layer/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "optimizer/RMSProp/update_Variable_1/ApplyRMSProp"
  op: "ApplyRMSProp"
  input: "Variable_1"
  input: "Variable_1/RMSProp"
  input: "Variable_1/RMSProp_1"
  input: "optimizer/RMSProp/learning_rate"
  input: "optimizer/RMSProp/decay"
  input: "optimizer/RMSProp/momentum"
  input: "optimizer/RMSProp/epsilon"
  input: "optimizer/gradients/model/hidden_layer1/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_1"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "optimizer/RMSProp/update_Variable_2/ApplyRMSProp"
  op: "ApplyRMSProp"
  input: "Variable_2"
  input: "Variable_2/RMSProp"
  input: "Variable_2/RMSProp_1"
  input: "optimizer/RMSProp/learning_rate"
  input: "optimizer/RMSProp/decay"
  input: "optimizer/RMSProp/momentum"
  input: "optimizer/RMSProp/epsilon"
  input: "optimizer/gradients/model/hidden_layer2/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_2"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "optimizer/RMSProp/update_Variable_3/ApplyRMSProp"
  op: "ApplyRMSProp"
  input: "Variable_3"
  input: "Variable_3/RMSProp"
  input: "Variable_3/RMSProp_1"
  input: "optimizer/RMSProp/learning_rate"
  input: "optimizer/RMSProp/decay"
  input: "optimizer/RMSProp/momentum"
  input: "optimizer/RMSProp/epsilon"
  input: "optimizer/gradients/model/hidden_layer3/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_3"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "optimizer/RMSProp/update_Variable_4/ApplyRMSProp"
  op: "ApplyRMSProp"
  input: "Variable_4"
  input: "Variable_4/RMSProp"
  input: "Variable_4/RMSProp_1"
  input: "optimizer/RMSProp/learning_rate"
  input: "optimizer/RMSProp/decay"
  input: "optimizer/RMSProp/momentum"
  input: "optimizer/RMSProp/epsilon"
  input: "optimizer/gradients/model/output_layer/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_4"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "optimizer/RMSProp"
  op: "NoOp"
  input: "^optimizer/RMSProp/update_Variable/ApplyRMSProp"
  input: "^optimizer/RMSProp/update_Variable_1/ApplyRMSProp"
  input: "^optimizer/RMSProp/update_Variable_2/ApplyRMSProp"
  input: "^optimizer/RMSProp/update_Variable_3/ApplyRMSProp"
  input: "^optimizer/RMSProp/update_Variable_4/ApplyRMSProp"
}
node {
  name: "ArgMax/dimension"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "ArgMax"
  op: "ArgMax"
  input: "model/output_layer/MatMul"
  input: "ArgMax/dimension"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "predict_op"
  op: "Cast"
  input: "ArgMax"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "cost/tags"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "cost"
      }
    }
  }
}
node {
  name: "cost"
  op: "ScalarSummary"
  input: "cost/tags"
  input: "cost_function/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init"
  op: "NoOp"
  input: "^Variable/Assign"
  input: "^Variable_1/Assign"
  input: "^Variable_2/Assign"
  input: "^Variable_3/Assign"
  input: "^Variable_4/Assign"
  input: "^Variable/RMSProp/Assign"
  input: "^Variable/RMSProp_1/Assign"
  input: "^Variable_1/RMSProp/Assign"
  input: "^Variable_1/RMSProp_1/Assign"
  input: "^Variable_2/RMSProp/Assign"
  input: "^Variable_2/RMSProp_1/Assign"
  input: "^Variable_3/RMSProp/Assign"
  input: "^Variable_3/RMSProp_1/Assign"
  input: "^Variable_4/RMSProp/Assign"
  input: "^Variable_4/RMSProp_1/Assign"
}
node {
  name: "save/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model"
      }
    }
  }
}
node {
  name: "save/SaveV2/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 15
          }
        }
        string_val: "Variable"
        string_val: "Variable/RMSProp"
        string_val: "Variable/RMSProp_1"
        string_val: "Variable_1"
        string_val: "Variable_1/RMSProp"
        string_val: "Variable_1/RMSProp_1"
        string_val: "Variable_2"
        string_val: "Variable_2/RMSProp"
        string_val: "Variable_2/RMSProp_1"
        string_val: "Variable_3"
        string_val: "Variable_3/RMSProp"
        string_val: "Variable_3/RMSProp_1"
        string_val: "Variable_4"
        string_val: "Variable_4/RMSProp"
        string_val: "Variable_4/RMSProp_1"
      }
    }
  }
}
node {
  name: "save/SaveV2/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 15
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save/SaveV2"
  op: "SaveV2"
  input: "save/Const"
  input: "save/SaveV2/tensor_names"
  input: "save/SaveV2/shape_and_slices"
  input: "Variable"
  input: "Variable/RMSProp"
  input: "Variable/RMSProp_1"
  input: "Variable_1"
  input: "Variable_1/RMSProp"
  input: "Variable_1/RMSProp_1"
  input: "Variable_2"
  input: "Variable_2/RMSProp"
  input: "Variable_2/RMSProp_1"
  input: "Variable_3"
  input: "Variable_3/RMSProp"
  input: "Variable_3/RMSProp_1"
  input: "Variable_4"
  input: "Variable_4/RMSProp"
  input: "Variable_4/RMSProp_1"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/control_dependency"
  op: "Identity"
  input: "save/Const"
  input: "^save/SaveV2"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@save/Const"
      }
    }
  }
}
node {
  name: "save/RestoreV2/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Variable"
      }
    }
  }
}
node {
  name: "save/RestoreV2/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2/tensor_names"
  input: "save/RestoreV2/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign"
  op: "Assign"
  input: "Variable"
  input: "save/RestoreV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_1/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Variable/RMSProp"
      }
    }
  }
}
node {
  name: "save/RestoreV2_1/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_1"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_1/tensor_names"
  input: "save/RestoreV2_1/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_1"
  op: "Assign"
  input: "Variable/RMSProp"
  input: "save/RestoreV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_2/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Variable/RMSProp_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_2/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_2"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_2/tensor_names"
  input: "save/RestoreV2_2/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_2"
  op: "Assign"
  input: "Variable/RMSProp_1"
  input: "save/RestoreV2_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_3/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Variable_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_3/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_3"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_3/tensor_names"
  input: "save/RestoreV2_3/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_3"
  op: "Assign"
  input: "Variable_1"
  input: "save/RestoreV2_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_1"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_4/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Variable_1/RMSProp"
      }
    }
  }
}
node {
  name: "save/RestoreV2_4/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_4"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_4/tensor_names"
  input: "save/RestoreV2_4/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_4"
  op: "Assign"
  input: "Variable_1/RMSProp"
  input: "save/RestoreV2_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_1"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_5/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Variable_1/RMSProp_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_5/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_5"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_5/tensor_names"
  input: "save/RestoreV2_5/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_5"
  op: "Assign"
  input: "Variable_1/RMSProp_1"
  input: "save/RestoreV2_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_1"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_6/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Variable_2"
      }
    }
  }
}
node {
  name: "save/RestoreV2_6/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_6"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_6/tensor_names"
  input: "save/RestoreV2_6/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_6"
  op: "Assign"
  input: "Variable_2"
  input: "save/RestoreV2_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_2"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_7/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Variable_2/RMSProp"
      }
    }
  }
}
node {
  name: "save/RestoreV2_7/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_7"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_7/tensor_names"
  input: "save/RestoreV2_7/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_7"
  op: "Assign"
  input: "Variable_2/RMSProp"
  input: "save/RestoreV2_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_2"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_8/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Variable_2/RMSProp_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_8/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_8"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_8/tensor_names"
  input: "save/RestoreV2_8/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_8"
  op: "Assign"
  input: "Variable_2/RMSProp_1"
  input: "save/RestoreV2_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_2"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_9/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Variable_3"
      }
    }
  }
}
node {
  name: "save/RestoreV2_9/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_9"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_9/tensor_names"
  input: "save/RestoreV2_9/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_9"
  op: "Assign"
  input: "Variable_3"
  input: "save/RestoreV2_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_3"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_10/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Variable_3/RMSProp"
      }
    }
  }
}
node {
  name: "save/RestoreV2_10/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_10"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_10/tensor_names"
  input: "save/RestoreV2_10/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_10"
  op: "Assign"
  input: "Variable_3/RMSProp"
  input: "save/RestoreV2_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_3"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_11/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Variable_3/RMSProp_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_11/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_11"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_11/tensor_names"
  input: "save/RestoreV2_11/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_11"
  op: "Assign"
  input: "Variable_3/RMSProp_1"
  input: "save/RestoreV2_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_3"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_12/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Variable_4"
      }
    }
  }
}
node {
  name: "save/RestoreV2_12/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_12"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_12/tensor_names"
  input: "save/RestoreV2_12/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_12"
  op: "Assign"
  input: "Variable_4"
  input: "save/RestoreV2_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_4"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_13/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Variable_4/RMSProp"
      }
    }
  }
}
node {
  name: "save/RestoreV2_13/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_13"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_13/tensor_names"
  input: "save/RestoreV2_13/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_13"
  op: "Assign"
  input: "Variable_4/RMSProp"
  input: "save/RestoreV2_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_4"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_14/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Variable_4/RMSProp_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_14/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_14"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_14/tensor_names"
  input: "save/RestoreV2_14/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_14"
  op: "Assign"
  input: "Variable_4/RMSProp_1"
  input: "save/RestoreV2_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_4"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_all"
  op: "NoOp"
  input: "^save/Assign"
  input: "^save/Assign_1"
  input: "^save/Assign_2"
  input: "^save/Assign_3"
  input: "^save/Assign_4"
  input: "^save/Assign_5"
  input: "^save/Assign_6"
  input: "^save/Assign_7"
  input: "^save/Assign_8"
  input: "^save/Assign_9"
  input: "^save/Assign_10"
  input: "^save/Assign_11"
  input: "^save/Assign_12"
  input: "^save/Assign_13"
  input: "^save/Assign_14"
}
node {
  name: "Merge/MergeSummary"
  op: "MergeSummary"
  input: "cost"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
}
versions {
  producer: 22
}
